{
  "name": "WhatsApp Drive Assistant",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/whatsapp",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "37f1e0a3-cb8e-4c88-b1c7-2d1a8a6b8e82",
      "name": "WhatsApp Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "whatsapp-webhook"
    },
    {
      "parameters": {
        "jsCode": "// Parse incoming WhatsApp message from Twilio\nconst body = $input.first().json.Body || '';\nconst from = $input.first().json.From || '';\nconst messageId = $input.first().json.MessageSid || '';\n\n// Clean and parse the message\nconst message = body.trim().toUpperCase();\nconst parts = message.split(' ');\nconst command = parts[0] || '';\nconst path = parts[1] || '';\nconst destination = parts[2] || '';\n\n// Extract user phone number\nconst userPhone = from.replace('whatsapp:', '');\n\nreturn {\n  command: command,\n  path: path,\n  destination: destination,\n  originalMessage: body,\n  userPhone: userPhone,\n  messageId: messageId,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "b2e8f1a4-3c7e-4d89-a2b6-5f4e3d2c1b0a",
      "name": "Parse Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.command }}",
              "rightValue": "HELP",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "2", 
              "leftValue": "={{ $json.command }}",
              "rightValue": "STATUS",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "3",
              "leftValue": "={{ $json.command }}",
              "rightValue": "LIST",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "c3d4e5f6-7g8h-9i0j-k1l2-m3n4o5p6q7r8",
      "name": "Command Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Generate help message\nconst helpText = `ü§ñ *WhatsApp Drive Assistant Commands*\\n\\nüìÅ *File Operations:*\\n‚Ä¢ LIST /folder/path - List files in folder\\n‚Ä¢ DELETE /path/to/file.pdf - Delete file (requires confirmation)\\n‚Ä¢ MOVE /source/file.pdf /destination/ - Move file\\n‚Ä¢ SUMMARY /path/to/document.pdf - AI summary of document\\n\\n‚öôÔ∏è *System Commands:*\\n‚Ä¢ HELP - Show this message\\n‚Ä¢ STATUS - Check system status\\n‚Ä¢ CONFIRM DELETE filename - Confirm file deletion\\n\\nüìã *Examples:*\\n‚Ä¢ LIST /Projects/2024\\n‚Ä¢ DELETE /Archive/old_file.pdf\\n‚Ä¢ MOVE /Downloads/report.pdf /Projects/\\n‚Ä¢ SUMMARY /Documents/presentation.pptx\\n\\n‚ö†Ô∏è *Note:* Destructive operations require confirmation.`;\n\nreturn {\n  responseText: helpText,\n  userPhone: $json.userPhone\n};"
      },
      "id": "d4e5f6g7-8h9i-0j1k-l2m3-n4o5p6q7r8s9",
      "name": "Help Handler",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 100]
    },
    {
      "parameters": {
        "jsCode": "// Handle STATUS command\nconst statusText = `‚úÖ *System Status*\\n\\nü§ñ WhatsApp Drive Assistant is online\\n‚è∞ Last check: ${new Date().toLocaleString()}\\n\\nüîó *Connected Services:*\\n‚Ä¢ ‚úÖ Twilio WhatsApp\\n‚Ä¢ ‚ö†Ô∏è Google Drive API (Configure credentials)\\n‚Ä¢ ‚ö†Ô∏è Google Sheets Logging (Configure credentials)\\n‚Ä¢ ‚ö†Ô∏è OpenAI GPT-4 (Configure credentials)\\n\\nüìä Basic functionality ready!`;\n\nreturn {\n  responseText: statusText,\n  userPhone: $json.userPhone\n};"
      },
      "id": "e5f6g7h8-9i0j-1k2l-m3n4-o5p6q7r8s9t0",
      "name": "Status Handler", 
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "jsCode": "// Handle LIST command\nconst folderPath = $json.path || '/';\nconst responseText = `üìÅ *List Command Received*\\n\\nFolder: ${folderPath}\\n\\n‚ö†Ô∏è *Setup Required:*\\nTo enable Google Drive file listing:\\n1. Configure Google OAuth2 credentials in n8n\\n2. Add Google Drive API nodes\\n3. Test the connection\\n\\nüìã This is a demo response. Configure real Google Drive access to see actual files.`;\n\nreturn {\n  responseText: responseText,\n  userPhone: $json.userPhone\n};"
      },
      "id": "f6g7h8i9-0j1k-2l3m-n4o5-p6q7r8s9t0u1",
      "name": "List Handler",
      "type": "n8n-nodes-base.code", 
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Default handler for unknown commands\nconst command = $json.command || 'unknown';\nconst responseText = `‚ùå *Unknown Command: ${command}*\\n\\nType *HELP* to see available commands.\\n\\nüìã *Quick Commands:*\\n‚Ä¢ HELP - Show all commands\\n‚Ä¢ STATUS - Check system status\\n‚Ä¢ LIST / - List root folder`;\n\nreturn {\n  responseText: responseText,\n  userPhone: $json.userPhone\n};"
      },
      "id": "g7h8i9j0-1k2l-3m4n-o5p6-q7r8s9t0u1v2",
      "name": "Default Handler",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "jsCode": "// Send WhatsApp response\nconst responseText = $json.responseText || 'No response generated';\nconst userPhone = $json.userPhone || '';\n\nreturn {\n  Body: responseText,\n  To: `whatsapp:${userPhone}`,\n  From: 'whatsapp:+14155238886'\n};"
      },
      "id": "h8i9j0k1-2l3m-4n5o-p6q7-r8s9t0u1v2w3",
      "name": "Format Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 250]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "i9j0k1l2-3m4n-5o6p-q7r8-s9t0u1v2w3x4",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 250]
    }
  ],
  "connections": {
    "WhatsApp Webhook": {
      "main": [
        [
          {
            "node": "Parse Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Message": {
      "main": [
        [
          {
            "node": "Command Router",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "Command Router": {
      "main": [
        [
          {
            "node": "Help Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Status Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "List Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Default Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Help Handler": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status Handler": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Handler": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Handler": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-03T04:45:00.000Z",
  "versionId": "1"
}